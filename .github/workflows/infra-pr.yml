name: infra-pr

on:
  pull_request:
    paths:
      - "infra/**"
      - ".github/workflows/infra-pr.yml"
  push:
    branches:
      - main
    paths:
      - "infra/**"
      - ".github/workflows/infra-pr.yml"

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ARM_USE_OIDC: "true"

jobs:
  setup:
    runs-on: ubuntu-24.04
    outputs:
      modified_layers: ${{ steps.modified-layers.outputs.modified_layers }}
      matrix: ${{ steps.filter-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate Modified Terraform Layers
        id: modified-layers
        uses: ./.github/actions/tf-modified-layers
        with:
          layers-directory: 'infra'

      - name: Setup Terraform Matrix
        id: tf-setup
        uses: ./.github/actions/tf-setup

      - name: Filter Matrix by Modified Layers
        id: filter-matrix
        env:
          FULL_MATRIX: ${{ steps.tf-setup.outputs.matrix }}
          MODIFIED_LAYERS: ${{ steps.modified-layers.outputs.modified_layers }}
        run: |
          echo "Full matrix: $FULL_MATRIX"
          echo "Modified layers: $MODIFIED_LAYERS"
          
          # Filter matrix to only include modified layers
          if [ "$MODIFIED_LAYERS" = "[]" ] || [ -z "$MODIFIED_LAYERS" ]; then
            echo "No modified layers, returning empty matrix"
            FILTERED_MATRIX='{"include":[]}'
          else
            # Filter the matrix - remove "infra/" prefix from modified layers for comparison
            FILTERED_MATRIX=$(echo "$FULL_MATRIX" | jq --argjson modified "$MODIFIED_LAYERS" '
              .include as $items |
              {"include": ($items | map(select(.layer as $layer | $modified | map(gsub("^infra/"; "")) | index($layer))))}
            ' | jq -c '.')
          fi
          
          echo "Filtered matrix: $FILTERED_MATRIX"
          echo "matrix=$FILTERED_MATRIX" >> $GITHUB_OUTPUT

  # Generate dynamic jobs for each layer/environment combination
  generate-jobs:
    needs: setup
    if: needs.setup.outputs.matrix != '{"include":[]}'
    runs-on: ubuntu-24.04
    outputs:
      job-matrix: ${{ steps.generate.outputs.job-matrix }}
    steps:
      - name: Generate job matrix
        id: generate
        env:
          MATRIX: ${{ needs.setup.outputs.matrix }}
        run: |
          echo "Matrix: $MATRIX"
          
          # Transform matrix to job names
          JOB_MATRIX=$(echo "$MATRIX" | jq '
            {
              "include": [
                .include[] | {
                  "layer": .layer,
                  "environment": .environment,
                  "aks-cluster-name": (.["aks-cluster-name"] // ""),
                  "aks-resource-group": (.["aks-resource-group"] // ""),
                  "vars": (.vars | join(",")),
                  "runs-on": .["runs-on"],
                  "job-name": "\(.layer)-\(.environment)"
                }
              ]
            }
          ' | jq -c '.')
          
          echo "Job matrix: $JOB_MATRIX"
          echo "job-matrix=$JOB_MATRIX" >> $GITHUB_OUTPUT

  # Dynamically call the template for each layer/environment
  terraform:
    name: ${{ matrix.layer }} (${{ matrix.environment }})
    needs: [setup, generate-jobs]
    if: needs.setup.outputs.matrix != '{"include":[]}'
    strategy:
      matrix: ${{ fromJson(needs.generate-jobs.outputs.job-matrix) }}
    uses: ./.github/workflows/template-terraform.yml
    with:
      layer: ${{ matrix.layer }}
      environment: ${{ matrix.environment }}
      aks-cluster-name: ${{ matrix.aks-cluster-name }}
      aks-resource-group: ${{ matrix.aks-resource-group }}
      vars: ${{ matrix.vars }}
      runs-on: ${{ matrix.runs-on }}
    secrets: inherit
