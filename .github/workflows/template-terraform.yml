name: template-terraform

on:
  workflow_call:
    inputs:
      layer:
        description: "Terraform layer name"
        required: true
        type: string
      environment:
        description: "Environment name"
        required: true
        type: string
      aks-cluster-name:
        description: "AKS cluster name (optional)"
        required: false
        type: string
        default: ""
      aks-resource-group:
        description: "AKS resource group (optional)"
        required: false
        type: string
        default: ""
      vars:
        description: "Comma-separated list of variables to set from secrets"
        required: true
        type: string
      runs-on:
        description: "Runner type"
        required: false
        type: string
        default: "ubuntu-24.04"

permissions:
  contents: write
  id-token: write

env:
  TF_VAR_env: ${{ inputs.environment }}
  ENVIRONMENT: ${{ inputs.environment }}
  ARM_USE_OIDC: "true"

jobs:
  analyze:
    name: analyze
    runs-on: ubuntu-24.04
    environment: plan-${{ inputs.environment }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Terraform Analyze
        uses: ./.github/actions/tf-analyze
        with:
          layer: ${{ inputs.layer }}
          environment: ${{ inputs.environment }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}

  plan:
    name: plan
    needs: analyze
    runs-on: ${{ inputs.runs-on }}
    environment: plan-${{ inputs.environment }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    outputs:
      plan-exitcode: ${{ steps.terraform-plan.outputs.plan-exitcode }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Terraform Plan
        id: terraform-plan
        uses: ./.github/actions/tf-plan
        with:
          layer: ${{ inputs.layer }}
          environment: ${{ inputs.environment }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          aks-cluster-name: ${{ inputs.aks-cluster-name }}
          aks-resource-group: ${{ inputs.aks-resource-group }}
          vars: ${{ inputs.vars }}
          secrets: ${{ toJSON(secrets) }}

  apply:
    name: apply
    needs: [analyze, plan]
    # Only run apply if plan detected changes (exitcode = 2)
    if: needs.plan.outputs.plan-exitcode == 2
    environment: ${{ inputs.environment }}
    runs-on: ${{ inputs.runs-on }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Terraform Apply
        uses: ./.github/actions/tf-apply
        with:
          layer: ${{ inputs.layer }}
          environment: ${{ inputs.environment }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          aks-cluster-name: ${{ inputs.aks-cluster-name }}
          aks-resource-group: ${{ inputs.aks-resource-group }}
          vars: ${{ inputs.vars }}
          secrets: ${{ toJSON(secrets) }}
